# GitLab CI/CD Pipeline pour PPHOOK Docker
# Variables à définir dans GitLab : Settings > CI/CD > Variables

stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  STACK_NAME: "pphook"

# Stage de construction de l'image
build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  script:
    - cd docker/
    - docker build -t pphook:2.0 .
    - docker save pphook:2.0 | gzip > pphook-image.tar.gz
  artifacts:
    paths:
      - docker/pphook-image.tar.gz
    expire_in: 1 hour
  only:
    - main
    - develop

# Stage de déploiement sur Docker Swarm
deploy:
  stage: deploy
  image: docker:24.0.5
  before_script:
    # Configuration Docker pour se connecter au Swarm distant
    - mkdir -p ~/.docker
    - echo "$DOCKER_CERT" | base64 -d > ~/.docker/cert.pem
    - echo "$DOCKER_KEY" | base64 -d > ~/.docker/key.pem
    - echo "$DOCKER_CA" | base64 -d > ~/.docker/ca.pem
    - export DOCKER_HOST="tcp://$SWARM_MANAGER_IP:2376"
    - export DOCKER_TLS_VERIFY=1
    - export DOCKER_CERT_PATH=~/.docker
  script:
    - cd docker/
    # Charger l'image construite
    - docker load < pphook-image.tar.gz
    # Exporter les variables GitLab vers l'environnement
    - export PHPIPAM_URL="$PHPIPAM_URL"
    - export PHPIPAM_APP_ID="$PHPIPAM_APP_ID"
    - export PHPIPAM_USERNAME="$PHPIPAM_USERNAME"
    - export PHPIPAM_PASSWORD="$PHPIPAM_PASSWORD"
    - export POWERDNS_URL="$POWERDNS_URL"
    - export POWERDNS_API_KEY="$POWERDNS_API_KEY"
    - export SMTP_SERVER="$SMTP_SERVER"
    - export SMTP_PORT="$SMTP_PORT"
    - export EMAIL_FROM="$EMAIL_FROM"
    - export EMAIL_TO="$EMAIL_TO"
    - export GENERIC_EMAIL="$GENERIC_EMAIL"
    - export HOSTNAME_PATTERN="$HOSTNAME_PATTERN"
    - export MAX_HOSTNAME_LENGTH="$MAX_HOSTNAME_LENGTH"
    - export CHECK_INTERVAL="$CHECK_INTERVAL"
    # Déploiement
    - chmod +x deploy.sh
    - ./deploy.sh deploy
  dependencies:
    - build
  only:
    - main
  when: manual  # Déploiement manuel pour sécurité

# Job optionnel pour les logs
logs:
  stage: deploy
  image: docker:24.0.5
  before_script:
    - mkdir -p ~/.docker
    - echo "$DOCKER_CERT" | base64 -d > ~/.docker/cert.pem
    - echo "$DOCKER_KEY" | base64 -d > ~/.docker/key.pem
    - echo "$DOCKER_CA" | base64 -d > ~/.docker/ca.pem
    - export DOCKER_HOST="tcp://$SWARM_MANAGER_IP:2376"
    - export DOCKER_TLS_VERIFY=1
    - export DOCKER_CERT_PATH=~/.docker
  script:
    - cd docker/
    - chmod +x deploy.sh
    - ./deploy.sh status
  only:
    - main
  when: manual

# Job de nettoyage (si besoin)
cleanup:
  stage: deploy
  image: docker:24.0.5
  before_script:
    - mkdir -p ~/.docker
    - echo "$DOCKER_CERT" | base64 -d > ~/.docker/cert.pem
    - echo "$DOCKER_KEY" | base64 -d > ~/.docker/key.pem
    - echo "$DOCKER_CA" | base64 -d > ~/.docker/ca.pem
    - export DOCKER_HOST="tcp://$SWARM_MANAGER_IP:2376"
    - export DOCKER_TLS_VERIFY=1
    - export DOCKER_CERT_PATH=~/.docker
  script:
    - cd docker/
    - chmod +x deploy.sh
    - ./deploy.sh cleanup
  only:
    - main
  when: manual
